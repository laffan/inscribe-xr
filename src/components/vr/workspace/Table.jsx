/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 table.glb --keepgroups --keepnames
*/

import { Interactive } from "@react-three/xr";
import { useStoreActions, useStoreState } from "easy-peasy";
import React, { useState } from "react";
import { useGLTF } from "@react-three/drei";
import { Howl } from "howler";

const clickSound = new Howl({
  src: ["/assets/audio/effects/click.mp3"],
});

export function Model(props) {
  const inactiveY = 0.04;
  const activeY = 0.06;
  const setTableMode = useStoreActions((state) => state.manager.setTableMode);
  const tableMode = useStoreState((state) => state.manager.current.tableMode);

  const [mostRecentMode, setMostRecentMode] = useState(0);
  const handleModeChange = (mode) => {
    clickSound.play();

    setTableMode(mode);
  };
  const { nodes, materials } = useGLTF("/assets/models/table/table.glb");
  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        {tableMode !== 0 && (
          <group>
            {/* {tableMode === 4 && (
              <mesh
                name="tableTop"
                geometry={nodes.tableTop.geometry}
                material={materials.tabletopMat}
              />
            )} */}
            <mesh
              name="rail"
              geometry={nodes.rail.geometry}
              material={materials.buttonPlate}
              position={[0, 0.01, -0.03]}
            />

            <mesh
              name="buttonPlate"
              geometry={nodes.buttonPlate.geometry}
              material={materials.buttonPlate}
              position={[0, 0.01, 0.9]}
            />
            <Interactive
              onSelect={() => {
                handleModeChange(1);
              }}
            >
              <mesh
                name="button1"
                geometry={nodes.button1.geometry}
                material={tableMode === 1 ? materials.activeButton : materials.buttonMat }
                position={[-0.1, 0.02, 0.9]}
              />
            </Interactive>
            <Interactive
              onSelect={() => {
                handleModeChange(2);
              }}
            >
              <mesh
                name="button2"
                geometry={nodes.button2.geometry}
                material={tableMode === 2 ? materials.activeButton : materials.buttonMat }
                position={[-0.03, 0.02, 0.9]}
              />
            </Interactive>
            <Interactive
              onSelect={() => {
                handleModeChange(3);
              }}
            >
              <mesh
                name="button3"
                geometry={nodes.button3.geometry}
                material={tableMode === 3 ? materials.activeButton : materials.buttonMat }
                position={[0.03, 0.02, 0.9]}
              />
            </Interactive>
            <Interactive
              onSelect={() => {
                handleModeChange(4);
              }}
            >
              <mesh
                name="button4"
                geometry={nodes.button4.geometry}
                material={tableMode === 4 ? materials.activeButton : materials.buttonMat }
                position={[0.1, 0.02, 0.9]}
              />
            </Interactive>
          </group>
        )}

        <mesh
          name="tableTogglePlate"
          geometry={nodes.tableTogglePlate.geometry}
          material={materials.buttonPlate}
          position={[0, -0.01, 1.02]}
        />

        <Interactive
          onSelect={() => {
            setMostRecentMode(tableMode);
            handleModeChange(tableMode === 0 ? mostRecentMode : 0);
          }}
        >
          <mesh
            name="tableToggleBtn"
            geometry={nodes.tableToggleBtn.geometry}
            material={materials.onOffBtnMat}
            position={[0, -0.02, 1.05]}
          />
        </Interactive>
      </group>
    </group>
  );
}

useGLTF.preload("/assets/models/table/table.glb");
